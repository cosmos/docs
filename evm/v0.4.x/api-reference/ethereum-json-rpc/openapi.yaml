openapi: '3.0.0'
info:
  title: Cosmos EVM JSON-RPC API
  version: '0.3.0'
  description: Ethereum JSON-RPC API implementation for Cosmos EVM
servers:
  - url: # NEED SERVER
    description: Cosmos EVM Devnet EVM JSON RPC
tags:
  - name: web3
    description: Web3 namespace methods
  - name: net
    description: Network namespace methods
  - name: eth
    description: Ethereum namespace methods
  - name: personal
    description: Personal namespace methods
  - name: debug
    description: Debug namespace methods
  - name: miner
    description: Miner namespace methods
  - name: txpool
    description: Transaction pool namespace methods
paths:
  /web3/web3_clientVersion:
    post:
      tags:
        - web3
      summary: Get the web3 client version.
      operationId: web3_clientVersion
      description: |
        Get the web3 client version.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['web3_clientVersion']
                  default: 'web3_clientVersion'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: web3_clientVersion
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /web3/web3_sha3:
    post:
      tags:
        - web3
      summary: Returns Keccak-256 (not the standardized SHA3-256) of the given data.
      operationId: web3_sha3
      description: |
        Returns Keccak-256 (not the standardized SHA3-256) of the given data.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['web3_sha3']
                  default: 'web3_sha3'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: web3_sha3
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /net/net_version:
    post:
      tags:
        - net
      summary: Returns the current network id.
      operationId: net_version
      description: |
        Returns the current network id.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['net_version']
                  default: 'net_version'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: net_version
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "8"
  /net/net_peerCount:
    post:
      tags:
        - net
      summary: Returns the number of peers currently connected to the client.
      operationId: net_peerCount
      description: |
        Returns the number of peers currently connected to the client.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['net_peerCount']
                  default: 'net_peerCount'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: net_peerCount
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: 23
  /eth/eth_protocolVersion:
    post:
      tags:
        - eth
      summary: Returns the current ethereum protocol version.
      operationId: eth_protocolVersion
      description: |
        Returns the current ethereum protocol version.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_protocolVersion']
                  default: 'eth_protocolVersion'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_protocolVersion
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x3f"
  /eth/eth_syncing:
    post:
      tags:
        - eth
      summary: The sync status object may need to be different depending on the details of cometbft's sync protocol. However, the 'synced' result is simply a boolean, and can easily be derived from cometbft's internal sync state.
      operationId: eth_syncing
      description: |
        The sync status object may need to be different depending on the details of cometbft's sync protocol. However, the 'synced' result is simply a boolean, and can easily be derived from cometbft's internal sync state.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_syncing']
                  default: 'eth_syncing'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_syncing
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: false
  /eth/eth_gasPrice:
    post:
      tags:
        - eth
      summary: Returns the current gas price in the default EVM denomination parameter.
      operationId: eth_gasPrice
      description: |
        Returns the current gas price in the default EVM denomination parameter.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_gasPrice']
                  default: 'eth_gasPrice'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_gasPrice
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /eth/eth_accounts:
    post:
      tags:
        - eth
      summary: Returns array of all eth accounts.
      operationId: eth_accounts
      description: |
        Returns array of all eth accounts.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_accounts']
                  default: 'eth_accounts'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_accounts
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: ["0x3b7252d007059ffc82d16d022da3cbf9992d2f70","0xddd64b4712f7c8f1ace3c145c950339eddaf221d","0x0f54f47bf9b8e317b214ccd6a7c3e38b893cd7f0"]
  /eth/eth_blockNumber:
    post:
      tags:
        - eth
      summary: Returns the current block height.
      operationId: eth_blockNumber
      description: |
        Returns the current block height.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_blockNumber']
                  default: 'eth_blockNumber'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_blockNumber
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x66"
  /eth/eth_getBalance:
    post:
      tags:
        - eth
      summary: Returns the account balance for a given account address and Block Number.
      operationId: eth_getBalance
      description: |
        Returns the account balance for a given account address and Block Number.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_getBalance']
                  default: 'eth_getBalance'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_getBalance
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /eth/eth_getStorageAt:
    post:
      tags:
        - eth
      summary: Returns the storage address for a given account address.
      operationId: eth_getStorageAt
      description: |
        Returns the storage address for a given account address.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_getStorageAt']
                  default: 'eth_getStorageAt'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_getStorageAt
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /eth/eth_getTransactionCount:
    post:
      tags:
        - eth
      summary: Returns the total transaction for a given account address and Block Number.
      operationId: eth_getTransactionCount
      description: |
        Returns the total transaction for a given account address and Block Number.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_getTransactionCount']
                  default: 'eth_getTransactionCount'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_getTransactionCount
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /eth/eth_getBlockTransactionCountByNumber:
    post:
      tags:
        - eth
      summary: Returns the total transaction count for a given block number.
      operationId: eth_getBlockTransactionCountByNumber
      description: |
        Returns the total transaction count for a given block number.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_getBlockTransactionCountByNumber']
                  default: 'eth_getBlockTransactionCountByNumber'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_getBlockTransactionCountByNumber
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /eth/eth_getBlockTransactionCountByHash:
    post:
      tags:
        - eth
      summary: Returns the total transaction count for a given block hash.
      operationId: eth_getBlockTransactionCountByHash
      description: |
        Returns the total transaction count for a given block hash.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_getBlockTransactionCountByHash']
                  default: 'eth_getBlockTransactionCountByHash'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_getBlockTransactionCountByHash
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /eth/eth_getCode:
    post:
      tags:
        - eth
      summary: Returns the code for a given account address and Block Number.
      operationId: eth_getCode
      description: |
        Returns the code for a given account address and Block Number.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_getCode']
                  default: 'eth_getCode'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_getCode
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /eth/eth_sign:
    post:
      tags:
        - eth
      summary: The `sign` method calculates an Ethereum specific signature with `sign(keccak256("\x19Ethereum Signed Message:\n" + len(message) + message)))`.
      operationId: eth_sign
      description: |
        The `sign` method calculates an Ethereum specific signature with: `sign(keccak256("\x19Ethereum Signed Message:\n" + len(message) + message)))`.

        Implementation status: Fully implemented
        Public: No
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_sign']
                  default: 'eth_sign'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_sign
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /eth/eth_sendTransaction:
    post:
      tags:
        - eth
      summary: Sends transaction from given account to a given account.
      operationId: eth_sendTransaction
      description: |
        Sends transaction from given account to a given account.

        Implementation status: Fully implemented
        Public: No
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_sendTransaction']
                  default: 'eth_sendTransaction'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_sendTransaction
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /eth/eth_sendRawTransaction:
    post:
      tags:
        - eth
      summary: Creates new message call transaction or a contract creation for signed transactions. You can get signed transaction data using the [`personal_sign`](https://www.google.com/search?q=%23personal-sign) method.
      operationId: eth_sendRawTransaction
      description: |
        Creates new message call transaction or a contract creation for signed transactions. You can get signed transaction data using the [`personal_sign`](https://www.google.com/search?q=%23personal-sign) method.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_sendRawTransaction']
                  default: 'eth_sendRawTransaction'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_sendRawTransaction
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /eth/eth_call:
    post:
      tags:
        - eth
      summary: Executes a new message call immediately without creating a transaction on the block chain.
      operationId: eth_call
      description: |
        Executes a new message call immediately without creating a transaction on the block chain.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_call']
                  default: 'eth_call'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_call
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /eth/eth_estimateGas:
    post:
      tags:
        - eth
      summary: Returns an estimate value of the gas required to send the transaction.
      operationId: eth_estimateGas
      description: |
        Returns an estimate value of the gas required to send the transaction.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_estimateGas']
                  default: 'eth_estimateGas'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_estimateGas
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /eth/eth_getBlockByNumber:
    post:
      tags:
        - eth
      summary: Returns information about a block by block number.
      operationId: eth_getBlockByNumber
      description: |
        Returns information about a block by block number.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_getBlockByNumber']
                  default: 'eth_getBlockByNumber'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_getBlockByNumber
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /eth/eth_getBlockByHash:
    post:
      tags:
        - eth
      summary: Returns the block info given the hash found in the command above and a bool.
      operationId: eth_getBlockByHash
      description: |
        Returns the block info given the hash found in the command above and a bool.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_getBlockByHash']
                  default: 'eth_getBlockByHash'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_getBlockByHash
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /eth/eth_getTransactionByHash:
    post:
      tags:
        - eth
      summary: Returns transaction details given the ethereum tx something.
      operationId: eth_getTransactionByHash
      description: |
        Returns transaction details given the ethereum tx something.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_getTransactionByHash']
                  default: 'eth_getTransactionByHash'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_getTransactionByHash
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /eth/eth_getTransactionByBlockHashAndIndex:
    post:
      tags:
        - eth
      summary: Returns transaction details given the block hash and the transaction index.
      operationId: eth_getTransactionByBlockHashAndIndex
      description: |
        Returns transaction details given the block hash and the transaction index.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_getTransactionByBlockHashAndIndex']
                  default: 'eth_getTransactionByBlockHashAndIndex'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_getTransactionByBlockHashAndIndex
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /eth/eth_getTransactionReceipt:
    post:
      tags:
        - eth
      summary: Returns the receipt of a transaction by transaction hash.
      operationId: eth_getTransactionReceipt
      description: |
        Returns the receipt of a transaction by transaction hash.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_getTransactionReceipt']
                  default: 'eth_getTransactionReceipt'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_getTransactionReceipt
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /eth/eth_newFilter:
    post:
      tags:
        - eth
      summary: Create new filter using topics of some kind.
      operationId: eth_newFilter
      description: |
        Create new filter using topics of some kind.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_newFilter']
                  default: 'eth_newFilter'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_newFilter
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /eth/eth_newBlockFilter:
    post:
      tags:
        - eth
      summary: Creates a filter in the node, to notify when a new block arrives.
      operationId: eth_newBlockFilter
      description: |
        Creates a filter in the node, to notify when a new block arrives.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_newBlockFilter']
                  default: 'eth_newBlockFilter'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_newBlockFilter
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x3503de5f0c766c68f78a03a3b05036a5"
  /eth/eth_newPendingTransactionFilter:
    post:
      tags:
        - eth
      summary: Creates a filter in the node, to notify when new pending transactions arrive.
      operationId: eth_newPendingTransactionFilter
      description: |
        Creates a filter in the node, to notify when new pending transactions arrive.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_newPendingTransactionFilter']
                  default: 'eth_newPendingTransactionFilter'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_newPendingTransactionFilter
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x9daacfb5893d946997d3801ea18e9902"
  /eth/eth_uninstallFilter:
    post:
      tags:
        - eth
      summary: Removes the filter with the given filter id. Returns true if the filter was successfully uninstalled, otherwise false.
      operationId: eth_uninstallFilter
      description: |
        Removes the filter with the given filter id. Returns true if the filter was successfully uninstalled, otherwise false.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_uninstallFilter']
                  default: 'eth_uninstallFilter'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_uninstallFilter
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /eth/eth_getLogs:
    post:
      tags:
        - eth
      summary: Returns an array of all logs matching a given filter object.
      operationId: eth_getLogs
      description: |
        Returns an array of all logs matching a given filter object.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_getLogs']
                  default: 'eth_getLogs'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_getLogs
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /eth/eth_getTransactionByBlockNumberAndIndex:
    post:
      tags:
        - eth
      summary: Returns information about a transaction by block number and transaction index position.
      operationId: eth_getTransactionByBlockNumberAndIndex
      description: |
        Returns information about a transaction by block number and transaction index position.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_getTransactionByBlockNumberAndIndex']
                  default: 'eth_getTransactionByBlockNumberAndIndex'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_getTransactionByBlockNumberAndIndex
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /eth/eth_coinbase:
    post:
      tags:
        - eth
      summary: Returns the account the mining rewards will be send to.
      operationId: eth_coinbase
      description: |
        Returns the account the mining rewards will be send to.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_coinbase']
                  default: 'eth_coinbase'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_coinbase
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x7cB61D4117AE31a12E393a1Cfa3BaC666481D02E"
  /eth/eth_getProof:
    post:
      tags:
        - eth
      summary: Returns the account- and storage-values of the specified account including the Merkle-proof.
      operationId: eth_getProof
      description: |
        Returns the account- and storage-values of the specified account including the Merkle-proof.

        Implementation status: Partially implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_getProof']
                  default: 'eth_getProof'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_getProof
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /websocket/eth_subscribe:
    post:
      tags:
        - websocket
      summary: subscribe using JSON-RPC notifications.
      operationId: eth_subscribe
      description: |
        subscribe using JSON-RPC notifications. This allows clients to wait for events instead of polling for them. It works by subscribing to particular events. The node will return a subscription id. For each event that matches the subscription a notification with relevant data is send together with the subscription id.

        Implementation status: Partially implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_subscribe']
                  default: 'eth_subscribe'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_subscribe
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /websocket/eth_unsubscribe:
    post:
      tags:
        - websocket
      summary: Unsubscribe from an event using the subscription id
      operationId: eth_unsubscribe
      description: |
        Unsubscribe from an event using the subscription id

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['eth_unsubscribe']
                  default: 'eth_unsubscribe'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: eth_unsubscribe
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /personal/personal_importRawKey:
    post:
      tags:
        - personal
      summary: <Check>
      operationId: personal_importRawKey
      description: |
        <Check>

        Implementation status: Fully implemented
        Public: No
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['personal_importRawKey']
                  default: 'personal_importRawKey'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: personal_importRawKey
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /personal/personal_listAccounts:
    post:
      tags:
        - personal
      summary: <Check>
      operationId: personal_listAccounts
      description: |
        <Check>

        Implementation status: Fully implemented
        Public: No
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['personal_listAccounts']
                  default: 'personal_listAccounts'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: personal_listAccounts
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: ["0x3b7252d007059ffc82d16d022da3cbf9992d2f70","0xddd64b4712f7c8f1ace3c145c950339eddaf221d","0x0f54f47bf9b8e317b214ccd6a7c3e38b893cd7f0"]
  /personal/personal_newAccount:
    post:
      tags:
        - personal
      summary: <Check>
      operationId: personal_newAccount
      description: |
        <Check>

        Implementation status: Fully implemented
        Public: No
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['personal_newAccount']
                  default: 'personal_newAccount'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: personal_newAccount
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /personal/personal_unlockAccount:
    post:
      tags:
        - personal
      summary: <Check>
      operationId: personal_unlockAccount
      description: |
        <Check>

        Implementation status: Partially implemented
        Public: No
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['personal_unlockAccount']
                  default: 'personal_unlockAccount'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: personal_unlockAccount
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /personal/personal_sign:
    post:
      tags:
        - personal
      summary: <Check>
      operationId: personal_sign
      description: |
        <Check>

        Implementation status: Fully implemented
        Public: No
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['personal_sign']
                  default: 'personal_sign'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: personal_sign
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /debug/debug_traceTransaction:
    post:
      tags:
        - debug
      summary: \'traceTransaction\' will attempt to simulate a transaction exectution.
      operationId: debug_traceTransaction
      description: |
        The `traceTransaction` debugging method will attempt to run the transaction in the exact same manner as it was executed on the network.
        It will replay any transaction that may have been executed prior to this one before it will finally attempt to execute the transaction that corresponds to the given hash.

        Implementation status: Partially implemented
        Public: No
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['debug_traceTransaction']
                  default: 'debug_traceTransaction'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: debug_traceTransaction
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /txpool/txpool_content:
    post:
      tags:
        - txpool
      summary: Returns info on he tx mempool.
      operationId: txpool_content
      description: |
        Returns a list of the exact details of all the transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['txpool_content']
                  default: 'txpool_content'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: txpool_content
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /txpool/txpool_inspect:
    post:
      tags:
        - txpool
      summary: Inspect pending transactions in text format
      operationId: txpool_inspect
      description: |
        Returns a list on text format to summarize all the transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only. This is a method specifically tailored to developers to quickly see the transactions in the pool and find any potential issues.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['txpool_inspect']
                  default: 'txpool_inspect'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: txpool_inspect
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
  /txpool/txpool_status:
    post:
      tags:
        - txpool
      summary: Returns the number of transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.
      operationId: txpool_status
      description: |
        Returns the number of transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.

        Implementation status: Fully implemented
        Public: Yes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [jsonrpc, method, params, id]
              properties:
                jsonrpc:
                  type: string
                  enum: ['2.0']
                  default: '2.0'
                method:
                  type: string
                  enum: ['txpool_status']
                  default: 'txpool_status'
                params:
                  type: array
                  items: {}
                  description: |
                    No parameters required
                id:
                  type: integer
                  default: 1
            example:
              jsonrpc: '2.0'
              method: txpool_status
              params: []
              id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    description: The result of the RPC call
              example:
                jsonrpc: '2.0'
                id: 1
                result: "0x0"
