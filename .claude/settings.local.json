{
  "permissions": {
    "allow": [
      "Bash(npm install)",
      "Bash(node test-precompiles.js)",
      "Bash(node:*)",
      "Bash(# Test these to see which ones exist (no parameters first to check for existence)\nfor func_info in \"validators():0xca1e7819\" \"allValidators():0xf30589c3\" \"bondedValidators():0xb540b2dd\" \"delegations(address):0xbffe3486\" \"allDelegations(address):0x850d2572\" \"historicalInfo(uint64):0x8210c9eb\"; do\n  func_name=$(echo $func_info | cut -d: -f1)\n  selector=$(echo $func_info | cut -d: -f2)\n  echo \"Testing $func_name with selector $selector\"\n  result=$(curl -s -X POST --data \"{\n    \\\"jsonrpc\\\": \\\"2.0\\\",\n    \\\"method\\\": \\\"eth_call\\\",\n    \\\"params\\\": [\n        {\n            \\\"to\\\": \\\"0x0000000000000000000000000000000000000800\\\",\n            \\\"data\\\": \\\"$selector\\\"\n        },\n        \\\"latest\\\"\n    ],\n    \\\"id\\\": 1\n  }\" -H \"Content-Type: application/json\" $CDEVMRPC | jq -r '.error.message // .result')\n  \n  if [[ \"$result\" != *\"no method with id\"* ]]; then\n    echo \"  ✓ Function exists: $result\"\n  else\n    echo \"  ✗ Function not found\"\n  fi\ndone)",
      "Bash(# Test these to see which ones exist (no parameters first to check for existence)\nfor func_info in \"validators():0xca1e7819\" \"allValidators():0xf30589c3\" \"bondedValidators():0xb540b2dd\"; do\n  func_name=$(echo $func_info | cut -d: -f1)\n  selector=$(echo $func_info | cut -d: -f2)\n  echo \"Testing $func_name with selector $selector\"\n  result=$(curl -s -X POST --data \"{\n    \\\"jsonrpc\\\": \\\"2.0\\\",\n    \\\"method\\\": \\\"eth_call\\\",\n    \\\"params\\\": [\n        {\n            \\\"to\\\": \\\"0x0000000000000000000000000000000000000800\\\",\n            \\\"data\\\": \\\"$selector\\\"\n        },\n        \\\"latest\\\"\n    ],\n    \\\"id\\\": 1\n  }\" -H \"Content-Type: application/json\" $CDEVMRPC | jq -r '.error.message // .result')\n  echo \"  Result: $result\"\ndone)"
    ],
    "deny": []
  }
}